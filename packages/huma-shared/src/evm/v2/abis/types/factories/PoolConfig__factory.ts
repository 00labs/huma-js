/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { PoolConfig, PoolConfigInterface } from '../PoolConfig'

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AdminRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AdminRewardRateTooHigh',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuthorizedContractCallerRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'EvaluationAgentInsufficientLiquidity',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientFirstLossCover',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidBasisPointHigherThan10000',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinDepositAmountTooLow',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PoolIsNotOn',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PoolOperatorRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PoolOwnerInsufficientLiquidity',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PoolOwnerOrEARequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PoolOwnerRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ProposedEADoesNotOwnProvidedEANFT',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ProtocolIsPaused',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnderlyingTokenNotApprovedForHumaProtocol',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddressProvided',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'calendar',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'CalendarChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'credit',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'CreditChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardRate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityRate',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'EARewardsAndLiquidityChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'epochManager',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'EpochManagerChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'oldEA',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newEA',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newEAId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'EvaluationAgentChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'yieldInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'minPrincipalRateInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'lateFeeBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'FeeStructureChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'firstLossCover',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'coverRatePerLossInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'coverCapPerLoss',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'maxLiquidity',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'minLiquidity',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'riskYieldMultiplierInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'FirstLossCoverChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint96',
        name: 'frontLoadingFeeFlat',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'frontLoadingFeeBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'FrontLoadingFeesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'humaConfig',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'HumaConfigChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint96',
        name: 'liquidityCap',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'maxSeniorJuniorRatio',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'fixedSeniorYieldInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'tranchesRiskAdjustmentInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'withdrawalLockoutInDays',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'LPConfigChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'pool',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'poolFeeManager',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolFeeManagerChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolNameChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rewardRate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'liquidityRate',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolOwnerRewardsAndLiquidityChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'treasury',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolOwnerTreasuryChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'poolSafe',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolSafeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint96',
        name: 'maxCreditLine',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'uint96',
        name: 'minDepositAmount',
        type: 'uint96',
      },
      {
        indexed: false,
        internalType: 'enum PayPeriodDuration',
        name: 'payPeriodDuration',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'latePaymentGracePeriodInDays',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'defaultGracePeriodInDays',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'advanceRateInBps',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'bool',
        name: 'receivableAutoApproval',
        type: 'bool',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolSettingsChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'underlyingToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PoolUnderlyingTokenChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'receivableAsset',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'ReceivableAssetChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'seniorTranche',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'juniorTranche',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'TranchesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'tranchesPolicy',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'TranchesPolicyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'POOL_OPERATOR_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'calendar',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checkFirstLossCoverRequirementsForAdmin',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'checkLiquidityRequirementForEA',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    name: 'checkLiquidityRequirementForPoolOwner',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'lender',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'trancheVault',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'newBalance',
        type: 'uint256',
      },
    ],
    name: 'checkLiquidityRequirementForRedemption',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checkLiquidityRequirements',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'credit',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'creditDueManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'creditManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'epochManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'evaluationAgent',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'evaluationAgentId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAdminRnR',
    outputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'rewardRateInBpsForEA',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'rewardRateInBpsForPoolOwner',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidityRateInBpsByEA',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'liquidityRateInBpsByPoolOwner',
            type: 'uint16',
          },
        ],
        internalType: 'struct AdminRnR',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFeeStructure',
    outputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'yieldInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'minPrincipalRateInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'lateFeeBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct FeeStructure',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'getFirstLossCover',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'firstLossCover',
        type: 'address',
      },
    ],
    name: 'getFirstLossCoverConfig',
    outputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'coverRatePerLossInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint96',
            name: 'coverCapPerLoss',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'maxLiquidity',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'minLiquidity',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'riskYieldMultiplierInBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct FirstLossCoverConfig',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFirstLossCovers',
    outputs: [
      {
        internalType: 'address[16]',
        name: '',
        type: 'address[16]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getFrontLoadingFees',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLPConfig',
    outputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'liquidityCap',
            type: 'uint96',
          },
          {
            internalType: 'uint8',
            name: 'maxSeniorJuniorRatio',
            type: 'uint8',
          },
          {
            internalType: 'uint16',
            name: 'fixedSeniorYieldInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tranchesRiskAdjustmentInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'withdrawalLockoutPeriodInDays',
            type: 'uint16',
          },
        ],
        internalType: 'struct LPConfig',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPoolSettings',
    outputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'maxCreditLine',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'minDepositAmount',
            type: 'uint96',
          },
          {
            internalType: 'enum PayPeriodDuration',
            name: 'payPeriodDuration',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'latePaymentGracePeriodInDays',
            type: 'uint8',
          },
          {
            internalType: 'uint16',
            name: 'defaultGracePeriodInDays',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'advanceRateInBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'receivableAutoApproval',
            type: 'bool',
          },
        ],
        internalType: 'struct PoolSettings',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'humaConfig',
    outputs: [
      {
        internalType: 'contract HumaConfig',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_poolName',
        type: 'string',
      },
      {
        internalType: 'address[]',
        name: '_contracts',
        type: 'address[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'isFirstLossCover',
    outputs: [
      {
        internalType: 'bool',
        name: 'isCover',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'juniorTranche',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyHumaMasterAdmin',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyOwnerOrHumaMasterAdmin',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyPool',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyPoolOperator',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyPoolOwner',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyPoolOwnerOrEA',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'onlyPoolOwnerOrSentinelServiceAccount',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'onlyProtocolAndPoolOn',
    outputs: [],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolFeeManager',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolOwnerTreasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolSafe',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'receivableAsset',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'seniorTranche',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_calendar',
        type: 'address',
      },
    ],
    name: 'setCalendar',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_credit',
        type: 'address',
      },
    ],
    name: 'setCredit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rewardRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'liquidityRate',
        type: 'uint256',
      },
    ],
    name: 'setEARewardsAndLiquidity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_epochManager',
        type: 'address',
      },
    ],
    name: 'setEpochManager',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'eaId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'agent',
        type: 'address',
      },
    ],
    name: 'setEvaluationAgent',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint16',
            name: 'yieldInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'minPrincipalRateInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'lateFeeBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct FeeStructure',
        name: 'feeStructure',
        type: 'tuple',
      },
    ],
    name: 'setFeeStructure',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'index',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: 'firstLossCover',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'coverRatePerLossInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint96',
            name: 'coverCapPerLoss',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'maxLiquidity',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'minLiquidity',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'riskYieldMultiplierInBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct FirstLossCoverConfig',
        name: 'config',
        type: 'tuple',
      },
    ],
    name: 'setFirstLossCover',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'frontLoadingFeeFlat',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'frontLoadingFeeBps',
            type: 'uint16',
          },
        ],
        internalType: 'struct FrontLoadingFeesStructure',
        name: 'frontFees',
        type: 'tuple',
      },
    ],
    name: 'setFrontLoadingFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_humaConfig',
        type: 'address',
      },
    ],
    name: 'setHumaConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'liquidityCap',
            type: 'uint96',
          },
          {
            internalType: 'uint8',
            name: 'maxSeniorJuniorRatio',
            type: 'uint8',
          },
          {
            internalType: 'uint16',
            name: 'fixedSeniorYieldInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'tranchesRiskAdjustmentInBps',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'withdrawalLockoutPeriodInDays',
            type: 'uint16',
          },
        ],
        internalType: 'struct LPConfig',
        name: 'lpConfig',
        type: 'tuple',
      },
    ],
    name: 'setLPConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_pool',
        type: 'address',
      },
    ],
    name: 'setPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_poolFeeManager',
        type: 'address',
      },
    ],
    name: 'setPoolFeeManager',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'newName',
        type: 'string',
      },
    ],
    name: 'setPoolName',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rewardRate',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'liquidityRate',
        type: 'uint256',
      },
    ],
    name: 'setPoolOwnerRewardsAndLiquidity',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_poolOwnerTreasury',
        type: 'address',
      },
    ],
    name: 'setPoolOwnerTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_poolSafe',
        type: 'address',
      },
    ],
    name: 'setPoolSafe',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'maxCreditLine',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'minDepositAmount',
            type: 'uint96',
          },
          {
            internalType: 'enum PayPeriodDuration',
            name: 'payPeriodDuration',
            type: 'uint8',
          },
          {
            internalType: 'uint8',
            name: 'latePaymentGracePeriodInDays',
            type: 'uint8',
          },
          {
            internalType: 'uint16',
            name: 'defaultGracePeriodInDays',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'advanceRateInBps',
            type: 'uint16',
          },
          {
            internalType: 'bool',
            name: 'receivableAutoApproval',
            type: 'bool',
          },
        ],
        internalType: 'struct PoolSettings',
        name: 'settings',
        type: 'tuple',
      },
    ],
    name: 'setPoolSettings',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_underlyingToken',
        type: 'address',
      },
    ],
    name: 'setPoolUnderlyingToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_receivableAsset',
        type: 'address',
      },
    ],
    name: 'setReceivableAsset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_seniorTranche',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_juniorTranche',
        type: 'address',
      },
    ],
    name: 'setTranches',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_tranchesPolicy',
        type: 'address',
      },
    ],
    name: 'setTranchesPolicy',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tranchesPolicy',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlyingToken',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

export class PoolConfig__factory {
  static readonly abi = _abi
  static createInterface(): PoolConfigInterface {
    return new utils.Interface(_abi) as PoolConfigInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): PoolConfig {
    return new Contract(address, _abi, signerOrProvider) as PoolConfig
  }
}
