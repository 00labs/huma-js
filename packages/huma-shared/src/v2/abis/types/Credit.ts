/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers'
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from './common'

export type CreditConfigStruct = {
  creditLimit: PromiseOrValue<BigNumberish>
  committedAmount: PromiseOrValue<BigNumberish>
  periodDuration: PromiseOrValue<BigNumberish>
  numOfPeriods: PromiseOrValue<BigNumberish>
  yieldInBps: PromiseOrValue<BigNumberish>
  advanceRateInBps: PromiseOrValue<BigNumberish>
  revolving: PromiseOrValue<boolean>
  receivableBacked: PromiseOrValue<boolean>
  borrowerLevelCredit: PromiseOrValue<boolean>
  exclusive: PromiseOrValue<boolean>
  autoApproval: PromiseOrValue<boolean>
}

export type CreditConfigStructOutput = [
  BigNumber,
  BigNumber,
  number,
  number,
  number,
  number,
  boolean,
  boolean,
  boolean,
  boolean,
  boolean,
] & {
  creditLimit: BigNumber
  committedAmount: BigNumber
  periodDuration: number
  numOfPeriods: number
  yieldInBps: number
  advanceRateInBps: number
  revolving: boolean
  receivableBacked: boolean
  borrowerLevelCredit: boolean
  exclusive: boolean
  autoApproval: boolean
}

export type CreditLimitStruct = {
  creditLimit: PromiseOrValue<BigNumberish>
  availableCredit: PromiseOrValue<BigNumberish>
}

export type CreditLimitStructOutput = [BigNumber, BigNumber] & {
  creditLimit: BigNumber
  availableCredit: BigNumber
}

export type CreditRecordStruct = {
  unbilledPrincipal: PromiseOrValue<BigNumberish>
  nextDueDate: PromiseOrValue<BigNumberish>
  nextDue: PromiseOrValue<BigNumberish>
  yieldDue: PromiseOrValue<BigNumberish>
  totalPastDue: PromiseOrValue<BigNumberish>
  missedPeriods: PromiseOrValue<BigNumberish>
  remainingPeriods: PromiseOrValue<BigNumberish>
  state: PromiseOrValue<BigNumberish>
}

export type CreditRecordStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  number,
  number,
  number,
] & {
  unbilledPrincipal: BigNumber
  nextDueDate: BigNumber
  nextDue: BigNumber
  yieldDue: BigNumber
  totalPastDue: BigNumber
  missedPeriods: number
  remainingPeriods: number
  state: number
}

export type DueDetailStruct = {
  lateFeeUpdatedDate: PromiseOrValue<BigNumberish>
  lateFee: PromiseOrValue<BigNumberish>
  principalPastDue: PromiseOrValue<BigNumberish>
  yieldPastDue: PromiseOrValue<BigNumberish>
  committed: PromiseOrValue<BigNumberish>
  accrued: PromiseOrValue<BigNumberish>
  paid: PromiseOrValue<BigNumberish>
}

export type DueDetailStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
] & {
  lateFeeUpdatedDate: BigNumber
  lateFee: BigNumber
  principalPastDue: BigNumber
  yieldPastDue: BigNumber
  committed: BigNumber
  accrued: BigNumber
  paid: BigNumber
}

export interface CreditInterface extends utils.Interface {
  functions: {
    'calendar()': FunctionFragment
    'creditBorrowerMap(bytes32)': FunctionFragment
    'firstLossCover()': FunctionFragment
    'getCreditConfig(bytes32)': FunctionFragment
    'getCreditLimit(bytes32)': FunctionFragment
    'getCreditRecord(bytes32)': FunctionFragment
    'getDueDetail(bytes32)': FunctionFragment
    'initialize(address)': FunctionFragment
    'isApproved(bytes32)': FunctionFragment
    'isDefaultReady(bytes32)': FunctionFragment
    'isLate(bytes32)': FunctionFragment
    'maturityDates(bytes32)': FunctionFragment
    'poolConfig()': FunctionFragment
    'poolSafe()': FunctionFragment
    'setPoolConfig(address)': FunctionFragment
    'updateBorrowerLimit(address,uint96)': FunctionFragment
    'updatePoolConfigData()': FunctionFragment
  }

  getFunction(
    nameOrSignatureOrTopic:
      | 'calendar'
      | 'creditBorrowerMap'
      | 'firstLossCover'
      | 'getCreditConfig'
      | 'getCreditLimit'
      | 'getCreditRecord'
      | 'getDueDetail'
      | 'initialize'
      | 'isApproved'
      | 'isDefaultReady'
      | 'isLate'
      | 'maturityDates'
      | 'poolConfig'
      | 'poolSafe'
      | 'setPoolConfig'
      | 'updateBorrowerLimit'
      | 'updatePoolConfigData',
  ): FunctionFragment

  encodeFunctionData(functionFragment: 'calendar', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'creditBorrowerMap',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'firstLossCover',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'getCreditConfig',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'getCreditLimit',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'getCreditRecord',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'getDueDetail',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'isApproved',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'isDefaultReady',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'isLate',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(
    functionFragment: 'maturityDates',
    values: [PromiseOrValue<BytesLike>],
  ): string
  encodeFunctionData(functionFragment: 'poolConfig', values?: undefined): string
  encodeFunctionData(functionFragment: 'poolSafe', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'setPoolConfig',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'updateBorrowerLimit',
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>],
  ): string
  encodeFunctionData(
    functionFragment: 'updatePoolConfigData',
    values?: undefined,
  ): string

  decodeFunctionResult(functionFragment: 'calendar', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'creditBorrowerMap',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'firstLossCover',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getCreditConfig',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getCreditLimit',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getCreditRecord',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'getDueDetail',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'isApproved', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'isDefaultReady',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'isLate', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'maturityDates',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'poolConfig', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'poolSafe', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'setPoolConfig',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'updateBorrowerLimit',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'updatePoolConfigData',
    data: BytesLike,
  ): Result

  events: {
    'BillRefreshed(bytes32,uint256,uint256)': EventFragment
    'BorrowerApproved(address,uint96,uint16,uint16,uint96,bool,bool,bool)': EventFragment
    'CreditConfigChanged(bytes32,uint256,uint256,uint8,uint256,uint256,bool,bool,bool,bool)': EventFragment
    'CreditInitiated(address,uint256,uint256,uint8,uint256,bool)': EventFragment
    'CreditLineChanged(address,uint256,uint256)': EventFragment
    'CreditLineClosed(address,address,uint8)': EventFragment
    'CreditPaused(bytes32)': EventFragment
    'DefaultTriggered(bytes32,uint256,uint256,uint256,address)': EventFragment
    'DrawdownMade(address,uint256,uint256)': EventFragment
    'Initialized(uint8)': EventFragment
    'PaymentMade(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)': EventFragment
    'PoolConfigCacheUpdated(address)': EventFragment
    'PoolConfigChanged(address,address)': EventFragment
    'PrincipalPaymentMade(address,uint256,uint256,uint256,uint256,uint256,address)': EventFragment
    'RemainingPeriodsExtended(bytes32,uint256,uint256,uint256,uint256,address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'BillRefreshed'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'BorrowerApproved'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreditConfigChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreditInitiated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreditLineChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreditLineClosed'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'CreditPaused'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'DefaultTriggered'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'DrawdownMade'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Initialized'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PaymentMade'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PoolConfigCacheUpdated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PoolConfigChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PrincipalPaymentMade'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'RemainingPeriodsExtended'): EventFragment
}

export interface BillRefreshedEventObject {
  creditHash: string
  newDueDate: BigNumber
  amountDue: BigNumber
}
export type BillRefreshedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  BillRefreshedEventObject
>

export type BillRefreshedEventFilter = TypedEventFilter<BillRefreshedEvent>

export interface BorrowerApprovedEventObject {
  borrower: string
  creditLimit: BigNumber
  numOfPeriods: number
  yieldInBps: number
  committedAmount: BigNumber
  revolving: boolean
  receivableRequired: boolean
  borrowerLevelCredit: boolean
}
export type BorrowerApprovedEvent = TypedEvent<
  [string, BigNumber, number, number, BigNumber, boolean, boolean, boolean],
  BorrowerApprovedEventObject
>

export type BorrowerApprovedEventFilter =
  TypedEventFilter<BorrowerApprovedEvent>

export interface CreditConfigChangedEventObject {
  creditHash: string
  creditLimit: BigNumber
  committedAmount: BigNumber
  periodDuration: number
  numOfPeriods: BigNumber
  yieldInBps: BigNumber
  revolving: boolean
  receivableBacked: boolean
  borrowerLevelCredit: boolean
  exclusive: boolean
}
export type CreditConfigChangedEvent = TypedEvent<
  [
    string,
    BigNumber,
    BigNumber,
    number,
    BigNumber,
    BigNumber,
    boolean,
    boolean,
    boolean,
    boolean,
  ],
  CreditConfigChangedEventObject
>

export type CreditConfigChangedEventFilter =
  TypedEventFilter<CreditConfigChangedEvent>

export interface CreditInitiatedEventObject {
  borrower: string
  creditLimit: BigNumber
  aprInBps: BigNumber
  periodDuration: number
  remainingPeriods: BigNumber
  approved: boolean
}
export type CreditInitiatedEvent = TypedEvent<
  [string, BigNumber, BigNumber, number, BigNumber, boolean],
  CreditInitiatedEventObject
>

export type CreditInitiatedEventFilter = TypedEventFilter<CreditInitiatedEvent>

export interface CreditLineChangedEventObject {
  borrower: string
  oldCreditLimit: BigNumber
  newCreditLimit: BigNumber
}
export type CreditLineChangedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  CreditLineChangedEventObject
>

export type CreditLineChangedEventFilter =
  TypedEventFilter<CreditLineChangedEvent>

export interface CreditLineClosedEventObject {
  borrower: string
  by: string
  reasonCode: number
}
export type CreditLineClosedEvent = TypedEvent<
  [string, string, number],
  CreditLineClosedEventObject
>

export type CreditLineClosedEventFilter =
  TypedEventFilter<CreditLineClosedEvent>

export interface CreditPausedEventObject {
  creditHash: string
}
export type CreditPausedEvent = TypedEvent<[string], CreditPausedEventObject>

export type CreditPausedEventFilter = TypedEventFilter<CreditPausedEvent>

export interface DefaultTriggeredEventObject {
  creditHash: string
  principalLoss: BigNumber
  yieldLoss: BigNumber
  feesLoss: BigNumber
  by: string
}
export type DefaultTriggeredEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, string],
  DefaultTriggeredEventObject
>

export type DefaultTriggeredEventFilter =
  TypedEventFilter<DefaultTriggeredEvent>

export interface DrawdownMadeEventObject {
  borrower: string
  borrowAmount: BigNumber
  netAmountToBorrower: BigNumber
}
export type DrawdownMadeEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  DrawdownMadeEventObject
>

export type DrawdownMadeEventFilter = TypedEventFilter<DrawdownMadeEvent>

export interface InitializedEventObject {
  version: number
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>

export interface PaymentMadeEventObject {
  borrower: string
  amount: BigNumber
  nextDueDate: BigNumber
  nextDue: BigNumber
  totalPastDue: BigNumber
  unbilledPrincipal: BigNumber
  principalDuePaid: BigNumber
  yieldDuePaid: BigNumber
  unbilledPrincipalPaid: BigNumber
  principalPastDuePaid: BigNumber
  yieldPastDuePaid: BigNumber
  lateFeePaid: BigNumber
  by: string
}
export type PaymentMadeEvent = TypedEvent<
  [
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
  ],
  PaymentMadeEventObject
>

export type PaymentMadeEventFilter = TypedEventFilter<PaymentMadeEvent>

export interface PoolConfigCacheUpdatedEventObject {
  poolConfig: string
}
export type PoolConfigCacheUpdatedEvent = TypedEvent<
  [string],
  PoolConfigCacheUpdatedEventObject
>

export type PoolConfigCacheUpdatedEventFilter =
  TypedEventFilter<PoolConfigCacheUpdatedEvent>

export interface PoolConfigChangedEventObject {
  newPoolConfig: string
  oldPoolConfig: string
}
export type PoolConfigChangedEvent = TypedEvent<
  [string, string],
  PoolConfigChangedEventObject
>

export type PoolConfigChangedEventFilter =
  TypedEventFilter<PoolConfigChangedEvent>

export interface PrincipalPaymentMadeEventObject {
  borrower: string
  amount: BigNumber
  nextDueDate: BigNumber
  nextDue: BigNumber
  unbilledPrincipal: BigNumber
  principalPaid: BigNumber
  by: string
}
export type PrincipalPaymentMadeEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, string],
  PrincipalPaymentMadeEventObject
>

export type PrincipalPaymentMadeEventFilter =
  TypedEventFilter<PrincipalPaymentMadeEvent>

export interface RemainingPeriodsExtendedEventObject {
  creditHash: string
  oldRemainingPeriods: BigNumber
  newRemainingPeriods: BigNumber
  oldMaturityDate: BigNumber
  newMaturityDate: BigNumber
  by: string
}
export type RemainingPeriodsExtendedEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber, string],
  RemainingPeriodsExtendedEventObject
>

export type RemainingPeriodsExtendedEventFilter =
  TypedEventFilter<RemainingPeriodsExtendedEvent>

export interface Credit extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  interface: CreditInterface

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>
  listeners(eventName?: string): Array<Listener>
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this
  removeAllListeners(eventName?: string): this
  off: OnEvent<this>
  on: OnEvent<this>
  once: OnEvent<this>
  removeListener: OnEvent<this>

  functions: {
    calendar(overrides?: CallOverrides): Promise<[string]>

    creditBorrowerMap(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[string]>

    firstLossCover(overrides?: CallOverrides): Promise<[string]>

    getCreditConfig(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[CreditConfigStructOutput]>

    getCreditLimit(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[CreditLimitStructOutput]>

    getCreditRecord(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[CreditRecordStructOutput]>

    getDueDetail(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[DueDetailStructOutput]>

    initialize(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    isApproved(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    isDefaultReady(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[boolean] & { isDefault: boolean }>

    isLate(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[boolean] & { lateFlag: boolean }>

    maturityDates(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<[BigNumber]>

    poolConfig(overrides?: CallOverrides): Promise<[string]>

    poolSafe(overrides?: CallOverrides): Promise<[string]>

    setPoolConfig(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    updateBorrowerLimit(
      borrower: PromiseOrValue<string>,
      newCreditLimit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    updatePoolConfigData(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>
  }

  calendar(overrides?: CallOverrides): Promise<string>

  creditBorrowerMap(
    arg0: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<string>

  firstLossCover(overrides?: CallOverrides): Promise<string>

  getCreditConfig(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<CreditConfigStructOutput>

  getCreditLimit(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<CreditLimitStructOutput>

  getCreditRecord(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<CreditRecordStructOutput>

  getDueDetail(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<DueDetailStructOutput>

  initialize(
    _poolConfig: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  isApproved(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  isDefaultReady(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  isLate(
    creditHash: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  maturityDates(
    arg0: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides,
  ): Promise<BigNumber>

  poolConfig(overrides?: CallOverrides): Promise<string>

  poolSafe(overrides?: CallOverrides): Promise<string>

  setPoolConfig(
    _poolConfig: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  updateBorrowerLimit(
    borrower: PromiseOrValue<string>,
    newCreditLimit: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  updatePoolConfigData(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  callStatic: {
    calendar(overrides?: CallOverrides): Promise<string>

    creditBorrowerMap(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<string>

    firstLossCover(overrides?: CallOverrides): Promise<string>

    getCreditConfig(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<CreditConfigStructOutput>

    getCreditLimit(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<CreditLimitStructOutput>

    getCreditRecord(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<CreditRecordStructOutput>

    getDueDetail(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<DueDetailStructOutput>

    initialize(
      _poolConfig: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    isApproved(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    isDefaultReady(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    isLate(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    maturityDates(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    poolConfig(overrides?: CallOverrides): Promise<string>

    poolSafe(overrides?: CallOverrides): Promise<string>

    setPoolConfig(
      _poolConfig: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    updateBorrowerLimit(
      borrower: PromiseOrValue<string>,
      newCreditLimit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<void>

    updatePoolConfigData(overrides?: CallOverrides): Promise<void>
  }

  filters: {
    'BillRefreshed(bytes32,uint256,uint256)'(
      creditHash?: PromiseOrValue<BytesLike> | null,
      newDueDate?: null,
      amountDue?: null,
    ): BillRefreshedEventFilter
    BillRefreshed(
      creditHash?: PromiseOrValue<BytesLike> | null,
      newDueDate?: null,
      amountDue?: null,
    ): BillRefreshedEventFilter

    'BorrowerApproved(address,uint96,uint16,uint16,uint96,bool,bool,bool)'(
      borrower?: null,
      creditLimit?: null,
      numOfPeriods?: null,
      yieldInBps?: null,
      committedAmount?: null,
      revolving?: null,
      receivableRequired?: null,
      borrowerLevelCredit?: null,
    ): BorrowerApprovedEventFilter
    BorrowerApproved(
      borrower?: null,
      creditLimit?: null,
      numOfPeriods?: null,
      yieldInBps?: null,
      committedAmount?: null,
      revolving?: null,
      receivableRequired?: null,
      borrowerLevelCredit?: null,
    ): BorrowerApprovedEventFilter

    'CreditConfigChanged(bytes32,uint256,uint256,uint8,uint256,uint256,bool,bool,bool,bool)'(
      creditHash?: PromiseOrValue<BytesLike> | null,
      creditLimit?: null,
      committedAmount?: null,
      periodDuration?: null,
      numOfPeriods?: null,
      yieldInBps?: null,
      revolving?: null,
      receivableBacked?: null,
      borrowerLevelCredit?: null,
      exclusive?: null,
    ): CreditConfigChangedEventFilter
    CreditConfigChanged(
      creditHash?: PromiseOrValue<BytesLike> | null,
      creditLimit?: null,
      committedAmount?: null,
      periodDuration?: null,
      numOfPeriods?: null,
      yieldInBps?: null,
      revolving?: null,
      receivableBacked?: null,
      borrowerLevelCredit?: null,
      exclusive?: null,
    ): CreditConfigChangedEventFilter

    'CreditInitiated(address,uint256,uint256,uint8,uint256,bool)'(
      borrower?: PromiseOrValue<string> | null,
      creditLimit?: null,
      aprInBps?: null,
      periodDuration?: null,
      remainingPeriods?: null,
      approved?: null,
    ): CreditInitiatedEventFilter
    CreditInitiated(
      borrower?: PromiseOrValue<string> | null,
      creditLimit?: null,
      aprInBps?: null,
      periodDuration?: null,
      remainingPeriods?: null,
      approved?: null,
    ): CreditInitiatedEventFilter

    'CreditLineChanged(address,uint256,uint256)'(
      borrower?: PromiseOrValue<string> | null,
      oldCreditLimit?: null,
      newCreditLimit?: null,
    ): CreditLineChangedEventFilter
    CreditLineChanged(
      borrower?: PromiseOrValue<string> | null,
      oldCreditLimit?: null,
      newCreditLimit?: null,
    ): CreditLineChangedEventFilter

    'CreditLineClosed(address,address,uint8)'(
      borrower?: PromiseOrValue<string> | null,
      by?: null,
      reasonCode?: null,
    ): CreditLineClosedEventFilter
    CreditLineClosed(
      borrower?: PromiseOrValue<string> | null,
      by?: null,
      reasonCode?: null,
    ): CreditLineClosedEventFilter

    'CreditPaused(bytes32)'(
      creditHash?: PromiseOrValue<BytesLike> | null,
    ): CreditPausedEventFilter
    CreditPaused(
      creditHash?: PromiseOrValue<BytesLike> | null,
    ): CreditPausedEventFilter

    'DefaultTriggered(bytes32,uint256,uint256,uint256,address)'(
      creditHash?: PromiseOrValue<BytesLike> | null,
      principalLoss?: null,
      yieldLoss?: null,
      feesLoss?: null,
      by?: null,
    ): DefaultTriggeredEventFilter
    DefaultTriggered(
      creditHash?: PromiseOrValue<BytesLike> | null,
      principalLoss?: null,
      yieldLoss?: null,
      feesLoss?: null,
      by?: null,
    ): DefaultTriggeredEventFilter

    'DrawdownMade(address,uint256,uint256)'(
      borrower?: PromiseOrValue<string> | null,
      borrowAmount?: null,
      netAmountToBorrower?: null,
    ): DrawdownMadeEventFilter
    DrawdownMade(
      borrower?: PromiseOrValue<string> | null,
      borrowAmount?: null,
      netAmountToBorrower?: null,
    ): DrawdownMadeEventFilter

    'Initialized(uint8)'(version?: null): InitializedEventFilter
    Initialized(version?: null): InitializedEventFilter

    'PaymentMade(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address)'(
      borrower?: PromiseOrValue<string> | null,
      amount?: null,
      nextDueDate?: null,
      nextDue?: null,
      totalPastDue?: null,
      unbilledPrincipal?: null,
      principalDuePaid?: null,
      yieldDuePaid?: null,
      unbilledPrincipalPaid?: null,
      principalPastDuePaid?: null,
      yieldPastDuePaid?: null,
      lateFeePaid?: null,
      by?: null,
    ): PaymentMadeEventFilter
    PaymentMade(
      borrower?: PromiseOrValue<string> | null,
      amount?: null,
      nextDueDate?: null,
      nextDue?: null,
      totalPastDue?: null,
      unbilledPrincipal?: null,
      principalDuePaid?: null,
      yieldDuePaid?: null,
      unbilledPrincipalPaid?: null,
      principalPastDuePaid?: null,
      yieldPastDuePaid?: null,
      lateFeePaid?: null,
      by?: null,
    ): PaymentMadeEventFilter

    'PoolConfigCacheUpdated(address)'(
      poolConfig?: PromiseOrValue<string> | null,
    ): PoolConfigCacheUpdatedEventFilter
    PoolConfigCacheUpdated(
      poolConfig?: PromiseOrValue<string> | null,
    ): PoolConfigCacheUpdatedEventFilter

    'PoolConfigChanged(address,address)'(
      newPoolConfig?: PromiseOrValue<string> | null,
      oldPoolConfig?: PromiseOrValue<string> | null,
    ): PoolConfigChangedEventFilter
    PoolConfigChanged(
      newPoolConfig?: PromiseOrValue<string> | null,
      oldPoolConfig?: PromiseOrValue<string> | null,
    ): PoolConfigChangedEventFilter

    'PrincipalPaymentMade(address,uint256,uint256,uint256,uint256,uint256,address)'(
      borrower?: PromiseOrValue<string> | null,
      amount?: null,
      nextDueDate?: null,
      nextDue?: null,
      unbilledPrincipal?: null,
      principalPaid?: null,
      by?: null,
    ): PrincipalPaymentMadeEventFilter
    PrincipalPaymentMade(
      borrower?: PromiseOrValue<string> | null,
      amount?: null,
      nextDueDate?: null,
      nextDue?: null,
      unbilledPrincipal?: null,
      principalPaid?: null,
      by?: null,
    ): PrincipalPaymentMadeEventFilter

    'RemainingPeriodsExtended(bytes32,uint256,uint256,uint256,uint256,address)'(
      creditHash?: PromiseOrValue<BytesLike> | null,
      oldRemainingPeriods?: null,
      newRemainingPeriods?: null,
      oldMaturityDate?: null,
      newMaturityDate?: null,
      by?: null,
    ): RemainingPeriodsExtendedEventFilter
    RemainingPeriodsExtended(
      creditHash?: PromiseOrValue<BytesLike> | null,
      oldRemainingPeriods?: null,
      newRemainingPeriods?: null,
      oldMaturityDate?: null,
      newMaturityDate?: null,
      by?: null,
    ): RemainingPeriodsExtendedEventFilter
  }

  estimateGas: {
    calendar(overrides?: CallOverrides): Promise<BigNumber>

    creditBorrowerMap(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    firstLossCover(overrides?: CallOverrides): Promise<BigNumber>

    getCreditConfig(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getCreditLimit(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getCreditRecord(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    getDueDetail(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    initialize(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    isApproved(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    isDefaultReady(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    isLate(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    maturityDates(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    poolConfig(overrides?: CallOverrides): Promise<BigNumber>

    poolSafe(overrides?: CallOverrides): Promise<BigNumber>

    setPoolConfig(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    updateBorrowerLimit(
      borrower: PromiseOrValue<string>,
      newCreditLimit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    updatePoolConfigData(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>
  }

  populateTransaction: {
    calendar(overrides?: CallOverrides): Promise<PopulatedTransaction>

    creditBorrowerMap(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    firstLossCover(overrides?: CallOverrides): Promise<PopulatedTransaction>

    getCreditConfig(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getCreditLimit(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getCreditRecord(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    getDueDetail(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    initialize(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    isApproved(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    isDefaultReady(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    isLate(
      creditHash: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    maturityDates(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    poolConfig(overrides?: CallOverrides): Promise<PopulatedTransaction>

    poolSafe(overrides?: CallOverrides): Promise<PopulatedTransaction>

    setPoolConfig(
      _poolConfig: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    updateBorrowerLimit(
      borrower: PromiseOrValue<string>,
      newCreditLimit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    updatePoolConfigData(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>
  }
}
