/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers'
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from '@ethersproject/abi'
import type { Listener, Provider } from '@ethersproject/providers'
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from './common'

export interface HumaConfigInterface extends utils.Interface {
  functions: {
    'addPauser(address)': FunctionFragment
    'addPoolAdmin(address)': FunctionFragment
    'eaNFTContractAddress()': FunctionFragment
    'eaServiceAccount()': FunctionFragment
    'humaTreasury()': FunctionFragment
    'isAssetValid(address)': FunctionFragment
    'isPauser(address)': FunctionFragment
    'isPoolAdmin(address)': FunctionFragment
    'owner()': FunctionFragment
    'pause()': FunctionFragment
    'paused()': FunctionFragment
    'protocolFeeInBps()': FunctionFragment
    'removePauser(address)': FunctionFragment
    'removePoolAdmin(address)': FunctionFragment
    'renounceOwnership()': FunctionFragment
    'sentinelServiceAccount()': FunctionFragment
    'setEANFTContractAddress(address)': FunctionFragment
    'setEAServiceAccount(address)': FunctionFragment
    'setHumaTreasury(address)': FunctionFragment
    'setLiquidityAsset(address,bool)': FunctionFragment
    'setSentinelServiceAccount(address)': FunctionFragment
    'setTreasuryFee(uint256)': FunctionFragment
    'transferOwnership(address)': FunctionFragment
    'unpause()': FunctionFragment
  }

  getFunction(
    nameOrSignatureOrTopic:
      | 'addPauser'
      | 'addPoolAdmin'
      | 'eaNFTContractAddress'
      | 'eaServiceAccount'
      | 'humaTreasury'
      | 'isAssetValid'
      | 'isPauser'
      | 'isPoolAdmin'
      | 'owner'
      | 'pause'
      | 'paused'
      | 'protocolFeeInBps'
      | 'removePauser'
      | 'removePoolAdmin'
      | 'renounceOwnership'
      | 'sentinelServiceAccount'
      | 'setEANFTContractAddress'
      | 'setEAServiceAccount'
      | 'setHumaTreasury'
      | 'setLiquidityAsset'
      | 'setSentinelServiceAccount'
      | 'setTreasuryFee'
      | 'transferOwnership'
      | 'unpause',
  ): FunctionFragment

  encodeFunctionData(
    functionFragment: 'addPauser',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'addPoolAdmin',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'eaNFTContractAddress',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'eaServiceAccount',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'humaTreasury',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'isAssetValid',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'isPauser',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'isPoolAdmin',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(functionFragment: 'pause', values?: undefined): string
  encodeFunctionData(functionFragment: 'paused', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'protocolFeeInBps',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'removePauser',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'removePoolAdmin',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'renounceOwnership',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'sentinelServiceAccount',
    values?: undefined,
  ): string
  encodeFunctionData(
    functionFragment: 'setEANFTContractAddress',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'setEAServiceAccount',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'setHumaTreasury',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'setLiquidityAsset',
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>],
  ): string
  encodeFunctionData(
    functionFragment: 'setSentinelServiceAccount',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(
    functionFragment: 'setTreasuryFee',
    values: [PromiseOrValue<BigNumberish>],
  ): string
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [PromiseOrValue<string>],
  ): string
  encodeFunctionData(functionFragment: 'unpause', values?: undefined): string

  decodeFunctionResult(functionFragment: 'addPauser', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'addPoolAdmin',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'eaNFTContractAddress',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'eaServiceAccount',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'humaTreasury',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'isAssetValid',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'isPauser', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'isPoolAdmin', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'pause', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'paused', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'protocolFeeInBps',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'removePauser',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'removePoolAdmin',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'renounceOwnership',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'sentinelServiceAccount',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setEANFTContractAddress',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setEAServiceAccount',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setHumaTreasury',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setLiquidityAsset',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setSentinelServiceAccount',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'setTreasuryFee',
    data: BytesLike,
  ): Result
  decodeFunctionResult(
    functionFragment: 'transferOwnership',
    data: BytesLike,
  ): Result
  decodeFunctionResult(functionFragment: 'unpause', data: BytesLike): Result

  events: {
    'EANFTContractAddressChanged(address)': EventFragment
    'EAServiceAccountChanged(address)': EventFragment
    'HumaTreasuryChanged(address)': EventFragment
    'LiquidityAssetAdded(address,address)': EventFragment
    'LiquidityAssetRemoved(address,address)': EventFragment
    'OwnershipTransferred(address,address)': EventFragment
    'Paused(address)': EventFragment
    'PauserAdded(address,address)': EventFragment
    'PauserRemoved(address,address)': EventFragment
    'PoolAdminAdded(address,address)': EventFragment
    'PoolAdminRemoved(address,address)': EventFragment
    'ProtocolDefaultGracePeriodChanged(uint256)': EventFragment
    'ProtocolInitialized(address)': EventFragment
    'SentinelServiceAccountChanged(address)': EventFragment
    'TreasuryFeeChanged(uint256,uint256)': EventFragment
    'Unpaused(address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'EANFTContractAddressChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'EAServiceAccountChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'HumaTreasuryChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LiquidityAssetAdded'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'LiquidityAssetRemoved'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Paused'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PauserAdded'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PauserRemoved'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PoolAdminAdded'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'PoolAdminRemoved'): EventFragment
  getEvent(
    nameOrSignatureOrTopic: 'ProtocolDefaultGracePeriodChanged',
  ): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ProtocolInitialized'): EventFragment
  getEvent(
    nameOrSignatureOrTopic: 'SentinelServiceAccountChanged',
  ): EventFragment
  getEvent(nameOrSignatureOrTopic: 'TreasuryFeeChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Unpaused'): EventFragment
}

export interface EANFTContractAddressChangedEventObject {
  eaNFT: string
}
export type EANFTContractAddressChangedEvent = TypedEvent<
  [string],
  EANFTContractAddressChangedEventObject
>

export type EANFTContractAddressChangedEventFilter =
  TypedEventFilter<EANFTContractAddressChangedEvent>

export interface EAServiceAccountChangedEventObject {
  eaService: string
}
export type EAServiceAccountChangedEvent = TypedEvent<
  [string],
  EAServiceAccountChangedEventObject
>

export type EAServiceAccountChangedEventFilter =
  TypedEventFilter<EAServiceAccountChangedEvent>

export interface HumaTreasuryChangedEventObject {
  newTreasuryAddress: string
}
export type HumaTreasuryChangedEvent = TypedEvent<
  [string],
  HumaTreasuryChangedEventObject
>

export type HumaTreasuryChangedEventFilter =
  TypedEventFilter<HumaTreasuryChangedEvent>

export interface LiquidityAssetAddedEventObject {
  asset: string
  by: string
}
export type LiquidityAssetAddedEvent = TypedEvent<
  [string, string],
  LiquidityAssetAddedEventObject
>

export type LiquidityAssetAddedEventFilter =
  TypedEventFilter<LiquidityAssetAddedEvent>

export interface LiquidityAssetRemovedEventObject {
  asset: string
  by: string
}
export type LiquidityAssetRemovedEvent = TypedEvent<
  [string, string],
  LiquidityAssetRemovedEventObject
>

export type LiquidityAssetRemovedEventFilter =
  TypedEventFilter<LiquidityAssetRemovedEvent>

export interface OwnershipTransferredEventObject {
  previousOwner: string
  newOwner: string
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>

export interface PausedEventObject {
  account: string
}
export type PausedEvent = TypedEvent<[string], PausedEventObject>

export type PausedEventFilter = TypedEventFilter<PausedEvent>

export interface PauserAddedEventObject {
  pauser: string
  by: string
}
export type PauserAddedEvent = TypedEvent<
  [string, string],
  PauserAddedEventObject
>

export type PauserAddedEventFilter = TypedEventFilter<PauserAddedEvent>

export interface PauserRemovedEventObject {
  pauser: string
  by: string
}
export type PauserRemovedEvent = TypedEvent<
  [string, string],
  PauserRemovedEventObject
>

export type PauserRemovedEventFilter = TypedEventFilter<PauserRemovedEvent>

export interface PoolAdminAddedEventObject {
  poolAdmin: string
  by: string
}
export type PoolAdminAddedEvent = TypedEvent<
  [string, string],
  PoolAdminAddedEventObject
>

export type PoolAdminAddedEventFilter = TypedEventFilter<PoolAdminAddedEvent>

export interface PoolAdminRemovedEventObject {
  poolAdmin: string
  by: string
}
export type PoolAdminRemovedEvent = TypedEvent<
  [string, string],
  PoolAdminRemovedEventObject
>

export type PoolAdminRemovedEventFilter =
  TypedEventFilter<PoolAdminRemovedEvent>

export interface ProtocolDefaultGracePeriodChangedEventObject {
  gracePeriod: BigNumber
}
export type ProtocolDefaultGracePeriodChangedEvent = TypedEvent<
  [BigNumber],
  ProtocolDefaultGracePeriodChangedEventObject
>

export type ProtocolDefaultGracePeriodChangedEventFilter =
  TypedEventFilter<ProtocolDefaultGracePeriodChangedEvent>

export interface ProtocolInitializedEventObject {
  by: string
}
export type ProtocolInitializedEvent = TypedEvent<
  [string],
  ProtocolInitializedEventObject
>

export type ProtocolInitializedEventFilter =
  TypedEventFilter<ProtocolInitializedEvent>

export interface SentinelServiceAccountChangedEventObject {
  sentinelService: string
}
export type SentinelServiceAccountChangedEvent = TypedEvent<
  [string],
  SentinelServiceAccountChangedEventObject
>

export type SentinelServiceAccountChangedEventFilter =
  TypedEventFilter<SentinelServiceAccountChangedEvent>

export interface TreasuryFeeChangedEventObject {
  oldFee: BigNumber
  newFee: BigNumber
}
export type TreasuryFeeChangedEvent = TypedEvent<
  [BigNumber, BigNumber],
  TreasuryFeeChangedEventObject
>

export type TreasuryFeeChangedEventFilter =
  TypedEventFilter<TreasuryFeeChangedEvent>

export interface UnpausedEventObject {
  account: string
}
export type UnpausedEvent = TypedEvent<[string], UnpausedEventObject>

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>

export interface HumaConfig extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  interface: HumaConfigInterface

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>,
  ): Array<TypedListener<TEvent>>
  listeners(eventName?: string): Array<Listener>
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>,
  ): this
  removeAllListeners(eventName?: string): this
  off: OnEvent<this>
  on: OnEvent<this>
  once: OnEvent<this>
  removeListener: OnEvent<this>

  functions: {
    addPauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    addPoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    eaNFTContractAddress(overrides?: CallOverrides): Promise<[string]>

    eaServiceAccount(overrides?: CallOverrides): Promise<[string]>

    humaTreasury(overrides?: CallOverrides): Promise<[string]>

    isAssetValid(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    isPauser(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    isPoolAdmin(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<[boolean]>

    owner(overrides?: CallOverrides): Promise<[string]>

    pause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    paused(overrides?: CallOverrides): Promise<[boolean]>

    protocolFeeInBps(overrides?: CallOverrides): Promise<[number]>

    removePauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    removePoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    sentinelServiceAccount(overrides?: CallOverrides): Promise<[string]>

    setEANFTContractAddress(
      contractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    setEAServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    setHumaTreasury(
      treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    setLiquidityAsset(
      asset: PromiseOrValue<string>,
      valid: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    setSentinelServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    setTreasuryFee(
      feeInBps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>

    unpause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>
  }

  addPauser(
    _pauser: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  addPoolAdmin(
    _poolAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  eaNFTContractAddress(overrides?: CallOverrides): Promise<string>

  eaServiceAccount(overrides?: CallOverrides): Promise<string>

  humaTreasury(overrides?: CallOverrides): Promise<string>

  isAssetValid(
    asset: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  isPauser(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  isPoolAdmin(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides,
  ): Promise<boolean>

  owner(overrides?: CallOverrides): Promise<string>

  pause(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  paused(overrides?: CallOverrides): Promise<boolean>

  protocolFeeInBps(overrides?: CallOverrides): Promise<number>

  removePauser(
    _pauser: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  removePoolAdmin(
    _poolAdmin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  renounceOwnership(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  sentinelServiceAccount(overrides?: CallOverrides): Promise<string>

  setEANFTContractAddress(
    contractAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  setEAServiceAccount(
    accountAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  setHumaTreasury(
    treasury: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  setLiquidityAsset(
    asset: PromiseOrValue<string>,
    valid: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  setSentinelServiceAccount(
    accountAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  setTreasuryFee(
    feeInBps: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  transferOwnership(
    newOwner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  unpause(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>

  callStatic: {
    addPauser(
      _pauser: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    addPoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    eaNFTContractAddress(overrides?: CallOverrides): Promise<string>

    eaServiceAccount(overrides?: CallOverrides): Promise<string>

    humaTreasury(overrides?: CallOverrides): Promise<string>

    isAssetValid(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    isPauser(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    isPoolAdmin(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<boolean>

    owner(overrides?: CallOverrides): Promise<string>

    pause(overrides?: CallOverrides): Promise<void>

    paused(overrides?: CallOverrides): Promise<boolean>

    protocolFeeInBps(overrides?: CallOverrides): Promise<number>

    removePauser(
      _pauser: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    removePoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    renounceOwnership(overrides?: CallOverrides): Promise<void>

    sentinelServiceAccount(overrides?: CallOverrides): Promise<string>

    setEANFTContractAddress(
      contractAddress: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    setEAServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    setHumaTreasury(
      treasury: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    setLiquidityAsset(
      asset: PromiseOrValue<string>,
      valid: PromiseOrValue<boolean>,
      overrides?: CallOverrides,
    ): Promise<void>

    setSentinelServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    setTreasuryFee(
      feeInBps: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides,
    ): Promise<void>

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>

    unpause(overrides?: CallOverrides): Promise<void>
  }

  filters: {
    'EANFTContractAddressChanged(address)'(
      eaNFT?: null,
    ): EANFTContractAddressChangedEventFilter
    EANFTContractAddressChanged(
      eaNFT?: null,
    ): EANFTContractAddressChangedEventFilter

    'EAServiceAccountChanged(address)'(
      eaService?: null,
    ): EAServiceAccountChangedEventFilter
    EAServiceAccountChanged(
      eaService?: null,
    ): EAServiceAccountChangedEventFilter

    'HumaTreasuryChanged(address)'(
      newTreasuryAddress?: PromiseOrValue<string> | null,
    ): HumaTreasuryChangedEventFilter
    HumaTreasuryChanged(
      newTreasuryAddress?: PromiseOrValue<string> | null,
    ): HumaTreasuryChangedEventFilter

    'LiquidityAssetAdded(address,address)'(
      asset?: null,
      by?: null,
    ): LiquidityAssetAddedEventFilter
    LiquidityAssetAdded(asset?: null, by?: null): LiquidityAssetAddedEventFilter

    'LiquidityAssetRemoved(address,address)'(
      asset?: null,
      by?: null,
    ): LiquidityAssetRemovedEventFilter
    LiquidityAssetRemoved(
      asset?: null,
      by?: null,
    ): LiquidityAssetRemovedEventFilter

    'OwnershipTransferred(address,address)'(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): OwnershipTransferredEventFilter
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null,
    ): OwnershipTransferredEventFilter

    'Paused(address)'(account?: null): PausedEventFilter
    Paused(account?: null): PausedEventFilter

    'PauserAdded(address,address)'(
      pauser?: PromiseOrValue<string> | null,
      by?: null,
    ): PauserAddedEventFilter
    PauserAdded(
      pauser?: PromiseOrValue<string> | null,
      by?: null,
    ): PauserAddedEventFilter

    'PauserRemoved(address,address)'(
      pauser?: PromiseOrValue<string> | null,
      by?: null,
    ): PauserRemovedEventFilter
    PauserRemoved(
      pauser?: PromiseOrValue<string> | null,
      by?: null,
    ): PauserRemovedEventFilter

    'PoolAdminAdded(address,address)'(
      poolAdmin?: PromiseOrValue<string> | null,
      by?: null,
    ): PoolAdminAddedEventFilter
    PoolAdminAdded(
      poolAdmin?: PromiseOrValue<string> | null,
      by?: null,
    ): PoolAdminAddedEventFilter

    'PoolAdminRemoved(address,address)'(
      poolAdmin?: PromiseOrValue<string> | null,
      by?: null,
    ): PoolAdminRemovedEventFilter
    PoolAdminRemoved(
      poolAdmin?: PromiseOrValue<string> | null,
      by?: null,
    ): PoolAdminRemovedEventFilter

    'ProtocolDefaultGracePeriodChanged(uint256)'(
      gracePeriod?: null,
    ): ProtocolDefaultGracePeriodChangedEventFilter
    ProtocolDefaultGracePeriodChanged(
      gracePeriod?: null,
    ): ProtocolDefaultGracePeriodChangedEventFilter

    'ProtocolInitialized(address)'(by?: null): ProtocolInitializedEventFilter
    ProtocolInitialized(by?: null): ProtocolInitializedEventFilter

    'SentinelServiceAccountChanged(address)'(
      sentinelService?: null,
    ): SentinelServiceAccountChangedEventFilter
    SentinelServiceAccountChanged(
      sentinelService?: null,
    ): SentinelServiceAccountChangedEventFilter

    'TreasuryFeeChanged(uint256,uint256)'(
      oldFee?: null,
      newFee?: null,
    ): TreasuryFeeChangedEventFilter
    TreasuryFeeChanged(
      oldFee?: null,
      newFee?: null,
    ): TreasuryFeeChangedEventFilter

    'Unpaused(address)'(account?: null): UnpausedEventFilter
    Unpaused(account?: null): UnpausedEventFilter
  }

  estimateGas: {
    addPauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    addPoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    eaNFTContractAddress(overrides?: CallOverrides): Promise<BigNumber>

    eaServiceAccount(overrides?: CallOverrides): Promise<BigNumber>

    humaTreasury(overrides?: CallOverrides): Promise<BigNumber>

    isAssetValid(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    isPauser(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    isPoolAdmin(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    pause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    paused(overrides?: CallOverrides): Promise<BigNumber>

    protocolFeeInBps(overrides?: CallOverrides): Promise<BigNumber>

    removePauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    removePoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    sentinelServiceAccount(overrides?: CallOverrides): Promise<BigNumber>

    setEANFTContractAddress(
      contractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    setEAServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    setHumaTreasury(
      treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    setLiquidityAsset(
      asset: PromiseOrValue<string>,
      valid: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    setSentinelServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    setTreasuryFee(
      feeInBps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>

    unpause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>
  }

  populateTransaction: {
    addPauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    addPoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    eaNFTContractAddress(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    eaServiceAccount(overrides?: CallOverrides): Promise<PopulatedTransaction>

    humaTreasury(overrides?: CallOverrides): Promise<PopulatedTransaction>

    isAssetValid(
      asset: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    isPauser(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    isPoolAdmin(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    pause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    paused(overrides?: CallOverrides): Promise<PopulatedTransaction>

    protocolFeeInBps(overrides?: CallOverrides): Promise<PopulatedTransaction>

    removePauser(
      _pauser: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    removePoolAdmin(
      _poolAdmin: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    renounceOwnership(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    sentinelServiceAccount(
      overrides?: CallOverrides,
    ): Promise<PopulatedTransaction>

    setEANFTContractAddress(
      contractAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    setEAServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    setHumaTreasury(
      treasury: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    setLiquidityAsset(
      asset: PromiseOrValue<string>,
      valid: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    setSentinelServiceAccount(
      accountAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    setTreasuryFee(
      feeInBps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    transferOwnership(
      newOwner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>

    unpause(
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>
  }
}
