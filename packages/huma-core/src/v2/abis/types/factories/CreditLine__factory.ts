/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers'
import type { Provider } from '@ethersproject/providers'
import type { CreditLine, CreditLineInterface } from '../CreditLine'

const _abi = [
  {
    inputs: [],
    name: 'AttemptedDrawdownOnNonRevolvingLine',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuthorizedContractCallerRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CreditLimitExceeded',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CreditNotInStateForDrawdown',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CreditNotInStateForMakingPayment',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CreditNotInStateForMakingPrincipalPayment',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DrawdownNotAllowedAfterDueDateWithUnpaidDue',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DrawdownNotAllowedInFinalPeriodAndBeyond',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FirstDrawdownTooEarly',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientFirstLossCover',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InsufficientPoolBalanceForDrawdown',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SentinelServiceAccountRequired',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAddressProvided',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ZeroAmountProvided',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'previousAdmin',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newAdmin',
        type: 'address',
      },
    ],
    name: 'AdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'beacon',
        type: 'address',
      },
    ],
    name: 'BeaconUpgraded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newDueDate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nextDue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'totalPastDue',
        type: 'uint256',
      },
    ],
    name: 'BillRefreshed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'CreditClosedAfterPayOff',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'borrowAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'netAmountToBorrower',
        type: 'uint256',
      },
    ],
    name: 'DrawdownMade',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'yieldDuePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'principalDuePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unbilledPrincipalPaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'yieldPastDuePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'lateFeePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'principalPastDuePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PaymentMade',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'poolConfig',
        type: 'address',
      },
    ],
    name: 'PoolConfigCacheUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newPoolConfig',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'oldPoolConfig',
        type: 'address',
      },
    ],
    name: 'PoolConfigChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'payer',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'nextDueDate',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'principalDue',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unbilledPrincipal',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'principalDuePaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'unbilledPrincipalPaid',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'by',
        type: 'address',
      },
    ],
    name: 'PrincipalPaymentMade',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'creditManager',
    outputs: [
      {
        internalType: 'contract ICreditManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'borrowAmount',
        type: 'uint256',
      },
    ],
    name: 'drawdown',
    outputs: [
      {
        internalType: 'uint256',
        name: 'netAmountToBorrower',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dueManager',
    outputs: [
      {
        internalType: 'contract ICreditDueManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'firstLossCover',
    outputs: [
      {
        internalType: 'contract IFirstLossCover',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'getCreditHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
    ],
    name: 'getCreditRecord',
    outputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'unbilledPrincipal',
            type: 'uint96',
          },
          {
            internalType: 'uint64',
            name: 'nextDueDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'nextDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'totalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'missedPeriods',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'remainingPeriods',
            type: 'uint16',
          },
          {
            internalType: 'enum CreditState',
            name: 'state',
            type: 'uint8',
          },
        ],
        internalType: 'struct CreditRecord',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
    ],
    name: 'getDueDetail',
    outputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'lateFeeUpdatedDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'lateFee',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'principalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'committed',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'accrued',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'paid',
            type: 'uint96',
          },
        ],
        internalType: 'struct DueDetail',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'getDueInfo',
    outputs: [
      {
        components: [
          {
            internalType: 'uint96',
            name: 'unbilledPrincipal',
            type: 'uint96',
          },
          {
            internalType: 'uint64',
            name: 'nextDueDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'nextDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'totalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'missedPeriods',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'remainingPeriods',
            type: 'uint16',
          },
          {
            internalType: 'enum CreditState',
            name: 'state',
            type: 'uint8',
          },
        ],
        internalType: 'struct CreditRecord',
        name: 'cr',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint64',
            name: 'lateFeeUpdatedDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'lateFee',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'principalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'committed',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'accrued',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'paid',
            type: 'uint96',
          },
        ],
        internalType: 'struct DueDetail',
        name: 'dd',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
    ],
    name: 'getNextBillRefreshDate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'refreshDate',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'humaConfig',
    outputs: [
      {
        internalType: 'contract HumaConfig',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract PoolConfig',
        name: 'poolConfig_',
        type: 'address',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'borrower',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'makePayment',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountPaid',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'paidoff',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'makePrincipalPayment',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountPaid',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'paidoff',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pool',
    outputs: [
      {
        internalType: 'contract IPool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolConfig',
    outputs: [
      {
        internalType: 'contract PoolConfig',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'poolSafe',
    outputs: [
      {
        internalType: 'contract IPoolSafe',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'proxiableUUID',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint96',
            name: 'unbilledPrincipal',
            type: 'uint96',
          },
          {
            internalType: 'uint64',
            name: 'nextDueDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'nextDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'totalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'missedPeriods',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'remainingPeriods',
            type: 'uint16',
          },
          {
            internalType: 'enum CreditState',
            name: 'state',
            type: 'uint8',
          },
        ],
        internalType: 'struct CreditRecord',
        name: 'cr',
        type: 'tuple',
      },
    ],
    name: 'setCreditRecord',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract PoolConfig',
        name: 'poolConfig_',
        type: 'address',
      },
    ],
    name: 'setPoolConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'creditHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'uint96',
            name: 'unbilledPrincipal',
            type: 'uint96',
          },
          {
            internalType: 'uint64',
            name: 'nextDueDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'nextDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'totalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint16',
            name: 'missedPeriods',
            type: 'uint16',
          },
          {
            internalType: 'uint16',
            name: 'remainingPeriods',
            type: 'uint16',
          },
          {
            internalType: 'enum CreditState',
            name: 'state',
            type: 'uint8',
          },
        ],
        internalType: 'struct CreditRecord',
        name: 'cr',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint64',
            name: 'lateFeeUpdatedDate',
            type: 'uint64',
          },
          {
            internalType: 'uint96',
            name: 'lateFee',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'principalPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'yieldPastDue',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'committed',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'accrued',
            type: 'uint96',
          },
          {
            internalType: 'uint96',
            name: 'paid',
            type: 'uint96',
          },
        ],
        internalType: 'struct DueDetail',
        name: 'dd',
        type: 'tuple',
      },
    ],
    name: 'updateDueInfo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'updatePoolConfigData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
    ],
    name: 'upgradeTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
] as const

export class CreditLine__factory {
  static readonly abi = _abi
  static createInterface(): CreditLineInterface {
    return new utils.Interface(_abi) as CreditLineInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): CreditLine {
    return new Contract(address, _abi, signerOrProvider) as CreditLine
  }
}
